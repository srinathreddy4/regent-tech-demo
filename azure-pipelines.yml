# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  - group: regent-tech-demo
  # Container registry service connection established during pipeline creation
  - name: dockerRegistryServiceConnection
    value: '4073c00b-6623-4041-b73e-66989a883a73'
  # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build, test and push stage
  jobs:
  - job: Build
    displayName: Build test and push job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: 'Run tests inside container'
      enabled: false
      inputs:
        containerRegistry: 'ACR Service connection'
        repository: 'regenttechdemo'
        command: 'run'
        arguments: '$(containerRegistry)/regenttechdemo_app:$(latestTag) npm install-test'
        addPipelineData: false
        addBaseImageData: false

    - task: Docker@2
      displayName: Build and Push image to ACR
      inputs:
        containerRegistry: 'ACR Service connection'
        repository: '$(DOCKER_IMAGE_NAME)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(DOCKER_IMAGE_TAG)'

    - task: replacetokens@5
      displayName: Replace Tokens
      enabled: false
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)'
        targetFiles: '**/docker-compose.appservice.yml'
        encoding: 'auto'
        tokenPattern: 'custom'
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: 'docker-compose.appservice.yml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    